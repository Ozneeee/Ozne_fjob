ESX = nil
local PlayersTransforming, PlayersHarvesting = {}, {}, {}
local vine, jus = 1, 1
TriggerEvent('esx:getSharedObject', function(obj) ESX = obj end)
if Config.MaxInService ~= -1 then TriggerEvent('esx_service:activateService', 'ferailleur', Config.MaxInService) end
TriggerEvent('esx_phone:registerNumber', 'ferailleur', _U('ferailleur_client'), true, true)
TriggerEvent('esx_society:registerSociety', 'ferailleur', 'ferailleur', 'society_ferailleur', 'society_ferailleur', 'society_ferailleur', {type = 'private'})
local function Harvest(source, zone) if PlayersHarvesting[source] == true then local xPlayer  = ESX.GetPlayerFromId(source) if zone == "FerailleFarm" then local itemQuantity = xPlayer.getInventoryItem('feraille').count if itemQuantity >= 350 then xPlayer.showNotification(_U('not_enough_place')) return else SetTimeout(1800, function() xPlayer.addInventoryItem('feraille', 1) Harvest(source, zone) end) end end end end
RegisterServerEvent('esx_ferailleurjob:startHarvest') AddEventHandler('esx_ferailleurjob:startHarvest', function(zone) local _source = source if PlayersHarvesting[_source] == false then TriggerClientEvent('esx:showNotification', _source, '~r~C\'est pas bien de glitch ~w~') PlayersHarvesting[_source]=false else PlayersHarvesting[_source]=true TriggerClientEvent('esx:showNotification', _source, _U('raisin_taken'))   Harvest(_source,zone) end end)
RegisterServerEvent('esx_ferailleurjob:stopHarvest') AddEventHandler('esx_ferailleurjob:stopHarvest', function() local _source = source if PlayersHarvesting[_source] == true then PlayersHarvesting[_source]=false TriggerClientEvent('esx:showNotification', _source, '~r~Vous vous etes trop éloignez~s~') else TriggerClientEvent('esx:showNotification', _source, 'Vous pouvez ~g~récolter') PlayersHarvesting[_source]=true end end)
local function Transform(source, zone) if PlayersTransforming[source] == true then local xPlayer  = ESX.GetPlayerFromId(source) local _source = source if zone == "TraitementCaro" then local itemQuantity = xPlayer.getInventoryItem('feraille').count if itemQuantity <= 0 then TriggerClientEvent('esx:showNotification', _source, '~r~Pas assez de feraille~s~') return else local rand = math.random(0,100) if (rand >= 98) then SetTimeout(1800, function() xPlayer.removeInventoryItem('feraille', 3) xPlayer.addInventoryItem('carokit', 1) Transform(source, zone) end) else SetTimeout(1800, function() xPlayer.removeInventoryItem('feraille', 3) xPlayer.addInventoryItem('carokit', 1) Transform(source, zone) end) end end elseif zone == "TraitementKit" then local itemQuantity = xPlayer.getInventoryItem('feraille').count if itemQuantity <= 0 then TriggerClientEvent('esx:showNotification', _source, '~r~Pas assez de feraille~s~') return else SetTimeout(1800, function() xPlayer.removeInventoryItem('feraille', 5) xPlayer.addInventoryItem('fixkit', 1) Transform(source, zone)	   end) end elseif zone == "TraitementCrochet" then local itemQuantity = xPlayer.getInventoryItem('feraille').count if itemQuantity <= 0 then TriggerClientEvent('esx:showNotification', _source, '~r~Pas assez de feraille~s~') return else SetTimeout(1800, function() xPlayer.removeInventoryItem('feraille', 2) xPlayer.addInventoryItem('lockpick', 1) Transform(source, zone)	   end) end end end	 end
RegisterServerEvent('esx_ferailleurjob:startTransform') AddEventHandler('esx_ferailleurjob:startTransform', function(zone) local _source = source if PlayersTransforming[_source] == false then TriggerClientEvent('esx:showNotification', _source, '~r~C\'est pas bien de glitch ~w~') PlayersTransforming[_source]=false else PlayersTransforming[_source]=true TriggerClientEvent('esx:showNotification', _source, _U('transforming_in_progress'))  Transform(_source,zone) end end)
RegisterServerEvent('esx_ferailleurjob:stopTransform') AddEventHandler('esx_ferailleurjob:stopTransform', function() local _source = source if PlayersTransforming[_source] == true then PlayersTransforming[_source]=false TriggerClientEvent('esx:showNotification', _source, '~r~Vous vous etes trop éloignez~s~') else TriggerClientEvent('esx:showNotification', _source, 'Vous pouvez ~g~transformer votre feraille') PlayersTransforming[_source]=true end end)
RegisterServerEvent('esx_ferailleurjob:getStockItem') AddEventHandler('esx_ferailleurjob:getStockItem', function(itemName, count) local xPlayer = ESX.GetPlayerFromId(source) TriggerEvent('esx_addoninventory:getSharedInventory', 'society_ferailleur', function(inventory) local item = inventory.getItem(itemName) if item.count >= count then inventory.removeItem(itemName, count) xPlayer.addInventoryItem(itemName, count) else xPlayer.showNotification(_U('quantity_invalid')) end xPlayer.showNotification(_U('have_withdrawn') .. count .. ' ' .. item.label) end) end)
ESX.RegisterServerCallback('esx_ferailleurjob:getStockItems', function(source, cb) TriggerEvent('esx_addoninventory:getSharedInventory', 'society_ferailleur', function(inventory) cb(inventory.items) end) end)
RegisterServerEvent('esx_ferailleurjob:putStockItems') AddEventHandler('esx_ferailleurjob:putStockItems', function(itemName, count) local xPlayer = ESX.GetPlayerFromId(source) TriggerEvent('esx_addoninventory:getSharedInventory', 'society_ferailleur', function(inventory) local item = inventory.getItem(itemName) if item.count >= 0 then xPlayer.removeInventoryItem(itemName, count) inventory.addItem(itemName, count) else xPlayer.showNotification(_U('quantity_invalid')) end xPlayer.showNotification(_U('added') .. count .. ' ' .. item.label) end) end)
RegisterServerEvent('AnnounceFerailleOuvert') AddEventHandler('AnnounceFerailleOuvert', function() local _source = source local xPlayer = ESX.GetPlayerFromId(_source) local xPlayers	= ESX.GetPlayers() for i=1, #xPlayers, 1 do local xPlayer = ESX.GetPlayerFromId(xPlayers[i]) TriggerClientEvent('esx:showAdvancedNotification', xPlayers[i], '~y~Ferailleur', '~y~Ouverture', 'L entreprise Ferailleur vient ~g~d ouvrir~s~ \nNous vous attendons !', 'CHAR_PROPERTY_BAR_HI_MEN', 8) end end)
RegisterServerEvent('AnnounceFerailleFerme') AddEventHandler('AnnounceFerailleFerme', function() local _source = source local xPlayer = ESX.GetPlayerFromId(_source) local xPlayers	= ESX.GetPlayers() for i=1, #xPlayers, 1 do local xPlayer = ESX.GetPlayerFromId(xPlayers[i]) TriggerClientEvent('esx:showAdvancedNotification', xPlayers[i], '~y~Ferailleur', '~y~Fermeture', 'L entreprise Ferailleur vient ~r~de fermer~s~ \nA plus tard ! ', 'CHAR_PROPERTY_BAR_HI_MEN', 8) end end)
ESX.RegisterUsableItem('fixkit', function(source) local _source = source local xPlayer  = ESX.GetPlayerFromId(source) xPlayer.removeInventoryItem('fixkit', 1) TriggerClientEvent('ozne_useitem:onFixkit', _source) TriggerClientEvent('esx:showNotification', _source, 'Vous avez utilisé un ~b~Kit de réparation') end)
ESX.RegisterUsableItem('carokit', function(source) local _source = source local xPlayer  = ESX.GetPlayerFromId(source) xPlayer.removeInventoryItem('carokit', 1) TriggerClientEvent('ozne_useitem:onCarokit', _source) TriggerClientEvent('esx:showNotification', _source, 'Vous avez utilisé un ~b~Kit de carosserie') end)
ESX.RegisterServerCallback('esx_ferailleurjob:getPlayerInventory', function(source, cb) local xPlayer    = ESX.GetPlayerFromId(source) local items      = xPlayer.inventory cb({ items      = items }) end)